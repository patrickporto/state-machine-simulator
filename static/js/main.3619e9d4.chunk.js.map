{"version":3,"sources":["../i18n sync /^/.//.*/.js$","../i18n/en-US.js","sagas.js","ducks/stateMachine.js","store.js","theme.js","components/CytoscapeRenderer.js","components/Toolbar.js","views/Home.js","views/App.js","serviceWorker.js","i18n.js","settings.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","language","translations","saga","fetchUser","action","console","log","take","RESET","stateMachineActions","reset","createAction","transact","stateMachineSelector","state","stateMachine","currentStateSelector","createSelector","current","initialStateSelector","initial","stateMachineReducer","createReducer","payload","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","theme","global","colors","brand","font","family","size","height","cytoscape","use","klay","edgehandles","Canvas","styled","div","CytoscapeRenderer","initialState","currentState","onTransact","renderer","useRef","cy","style","selector","label","color","width","shape","handleChangeState","useCallback","evt","edge","$","target","source","node","updateHighlights","elements","removeClass","addClass","edges","outgoers","useEffect","mount","add","group","data","on","layout","name","spacing","preview","snap","snapToGridOnRelease","edgeParams","sourceNode","targetNode","i","camelCase","event","nodes","position","removeListener","ref","Toolbar","children","Box","fill","tag","direction","align","justify","background","elevation","pad","horizontal","vertical","Main","main","Home","dispatch","useDispatch","useSelector","handleTransact","handleReset","Button","icon","ClearOption","onClick","App","useState","showSidebar","setShowSidebar","ResponsiveContext","Consumer","Heading","level","margin","Notification","flex","overflow","exact","path","Layer","FormClose","Collapsible","open","Boolean","window","location","hostname","match","i18n","LanguageDetector","initReactI18next","init","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","resources","reduce","lang","require","default","react","wait","ReactDOM","render","StrictMode","I18nextProvider","Grommet","full","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3619e9d4.chunk.js","sourcesContent":["var map = {\n\t\"./en-US.js\": 118\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 117;","const language = {\n    translations: {\n        \"hello-world\": \"Hello World\",\n    },\n};\n\nexport default language;\n","import { take } from \"redux-saga/effects\";\n\nfunction fetchUser(action) {\n    console.log(\"CONNECTED\");\n}\n\nfunction* saga() {\n    yield take(\"USER_FETCH_REQUESTED\", fetchUser);\n}\n\nexport default saga;\n","import { createAction, createReducer, createSelector } from \"@reduxjs/toolkit\";\n\nconst INITIAL_STATE = {\n    initial: \"idle\",\n    current: \"idle\",\n};\n\nconst RESET = \"@STATE_MACHINE/RESET\";\nconst TRANSACT = \"@STATE_MACHINE/TRANSACT\";\n\nexport const stateMachineActions = {\n    reset: createAction(RESET),\n    transact: createAction(TRANSACT),\n};\n\n//#region selectors\nexport const stateMachineSelector = (state) => state.stateMachine;\n\nexport const currentStateSelector = createSelector(\n    stateMachineSelector,\n    (stateMachine) => stateMachine.current\n);\n\nexport const initialStateSelector = createSelector(\n    stateMachineSelector,\n    (stateMachine) => stateMachine.initial\n);\n//#endregion\n\nexport const stateMachineReducer = createReducer(INITIAL_STATE, {\n    [RESET]: (state, action) => {\n        return {\n            ...state,\n            current: state.initial,\n        };\n    },\n    [TRANSACT]: (state, action) => {\n        return {\n            ...state,\n            current: action.payload,\n        };\n    },\n});\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport saga from \"./sagas\";\nimport { stateMachineReducer } from \"./ducks\";\n\nconst rootReducer = combineReducers({ stateMachine: stateMachineReducer });\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(saga);\n\nexport default store;\n","const theme = {\n    global: {\n        colors: {\n            brand: \"#228BE6\",\n        },\n        font: {\n            family: \"Roboto\",\n            size: \"18px\",\n            height: \"20px\",\n        },\n    },\n};\n\nexport default theme;\n","import React, { useRef, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport cytoscape from \"cytoscape\";\nimport klay from \"cytoscape-klay\";\nimport edgehandles from \"cytoscape-edgehandles\";\nimport { camelCase } from \"change-case\";\n\ncytoscape.use(klay);\ncytoscape.use(edgehandles);\n\nconst Canvas = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\nconst CytoscapeRenderer = ({ initialState, currentState, onTransact }) => {\n    const renderer = useRef();\n    const cy = useRef(\n        cytoscape({\n            style: [\n                {\n                    selector: \"node\",\n                    style: {\n                        \"background-color\": \"#A28AFF\",\n                        label: \"data(id)\",\n                        color: \"#ffffff\",\n                    },\n                },\n                {\n                    selector: \"edge\",\n                    style: {\n                        width: 3,\n                        \"line-color\": \"#ffffff\",\n                        \"target-arrow-color\": \"#ffffff\",\n                        \"target-arrow-shape\": \"triangle\",\n                        \"curve-style\": \"bezier\",\n                        label: \"data(label)\",\n                        color: \"#ffffff\",\n                        \"text-background-color\": \"#A28AFF\",\n                        \"text-background-shape\": \"round-rectangle\",\n                        \"text-background-opacity\": 1,\n                        \"text-background-padding\": 8,\n                        \"curve-style\": \"unbundled-bezier\",\n                    },\n                },\n                {\n                    selector: \".highlighted\",\n                    style: {\n                        \"background-color\": \"#61bffc\",\n                        \"line-color\": \"#ffffff\",\n                        \"target-arrow-color\": \"#ffffff\",\n                        \"transition-property\":\n                            \"background-color, line-color, target-arrow-color\",\n                        \"transition-duration\": \"0.5s\",\n                        \"text-background-color\": \"#61bffc\",\n                    },\n                },\n                {\n                    selector: \".highlighted.hover\",\n                    style: {\n                        \"line-color\": \"#61bffc\",\n                        \"target-arrow-color\": \"#61bffc\",\n                        \"transition-property\":\n                            \"background-color, line-color, target-arrow-color\",\n                        \"transition-duration\": \"0.3s\",\n                        \"text-background-color\": \"#61bffc\",\n                    },\n                },\n                {\n                    selector: \".eh-handle\",\n                    style: {\n                        \"background-color\": \"#7A57FF\",\n                        label: \"\",\n                        width: 12,\n                        height: 12,\n                        shape: \"ellipse\",\n                        \"overlay-opacity\": 0,\n                        \"border-width\": 12, // makes the handle easier to hit\n                        \"border-opacity\": 0,\n                    },\n                },\n                {\n                    selector: \".eh-source\",\n                    style: {\n                        \"border-color\": \"#7A57FF\",\n                        \"border-opacity\": 1,\n                        \"border-width\": 2,\n                    },\n                },\n            ],\n        })\n    );\n\n    const handleChangeState = useCallback(\n        (evt) => {\n            const edge = cy.current.$(`#${evt.target.id()}`);\n            if (currentState !== edge.source().id()) {\n                return;\n            }\n            const node = edge.target();\n            onTransact(node.id());\n        },\n        [currentState, onTransact]\n    );\n\n    const updateHighlights = useCallback(() => {\n        const node = cy.current.$(`#${currentState}`);\n        cy.current.elements().removeClass(\"highlighted\");\n        node.addClass(\"highlighted\");\n        const edges = node.outgoers(\"edge\");\n        for (const edge of edges) {\n            edge.addClass(\"highlighted\");\n        }\n    }, [currentState]);\n\n    useEffect(() => {\n        cy.current.mount(renderer.current);\n        cy.current.add([\n            {\n                group: \"nodes\",\n                data: { id: \"idle\" },\n            },\n            {\n                group: \"nodes\",\n                data: { id: \"pending\" },\n            },\n            {\n                group: \"nodes\",\n                data: { id: \"resolved\" },\n            },\n            {\n                group: \"nodes\",\n                data: { id: \"rejected\" },\n            },\n            {\n                group: \"edges\",\n                data: {\n                    label: \"fetch\",\n                    source: \"idle\",\n                    target: \"pending\",\n                },\n            },\n            {\n                group: \"edges\",\n                data: {\n                    label: \"done\",\n                    source: \"pending\",\n                    target: \"resolved\",\n                },\n            },\n            {\n                group: \"edges\",\n                data: {\n                    label: \"error\",\n                    source: \"pending\",\n                    target: \"rejected\",\n                },\n            },\n            {\n                group: \"edges\",\n                data: {\n                    label: \"fetch\",\n                    source: \"rejected\",\n                    target: \"pending\",\n                },\n            },\n        ]);\n        cy.current.on(\"mouseover\", \"edge\", ({ target }) => {\n            target.addClass(\"hover\");\n        });\n        cy.current.on(\"mouseout\", \"edge\", ({ target }) => {\n            target.removeClass(\"hover\");\n        });\n\n        const layout = cy.current.layout({\n            name: \"klay\",\n            klay: { spacing: 200 },\n        });\n\n        const node = cy.current.$(`#${currentState}`);\n        node.addClass(\"highlighted\");\n        const edges = node.outgoers(\"edge\");\n        for (const edge of edges) {\n            edge.addClass(\"highlighted\");\n        }\n\n        layout.run();\n\n        cy.current.edgehandles({\n            preview: true,\n            snap: true,\n            snapToGridOnRelease: false,\n            edgeParams(sourceNode, targetNode, i) {\n                return {\n                    data: {\n                        label: camelCase(\n                            `${sourceNode.id()} To ${targetNode.id()}`\n                        ),\n                    },\n                };\n            },\n        });\n\n        cy.current.on(\"taphold\", function (event) {\n            const nodes = cy.current.$(\"node\");\n            cy.current.add([\n                {\n                    group: \"nodes\",\n                    data: { id: `state${nodes.size()}` },\n                    position: event.position,\n                },\n            ]);\n        });\n    }, []);\n\n    useEffect(() => {\n        updateHighlights();\n\n        cy.current.on(\"tap\", \"edge\", handleChangeState);\n        cy.current.on(\"ehcomplete\", updateHighlights);\n        return () => {\n            cy.current.removeListener(\"tap\", handleChangeState);\n            cy.current.removeListener(\"ehcomplete\", updateHighlights);\n        };\n    }, [currentState]);\n\n    return <Canvas ref={renderer}></Canvas>;\n};\n\nCytoscapeRenderer.propTypes = {\n    currentState: PropTypes.string.isRequired,\n    initialState: PropTypes.string.isRequired,\n    onTransact: PropTypes.func.isRequired,\n};\n\nexport default CytoscapeRenderer;\n","import React from \"react\";\nimport { Box } from \"grommet\";\n\nconst Toolbar = ({ children }) => (\n    <Box\n        fill=\"horizontal\"\n        tag=\"section\"\n        direction=\"row-responsive\"\n        align=\"center\"\n        justify=\"between\"\n        background=\"light-2\"\n        elevation=\"medium\"\n        pad={{ horizontal: \"medium\", vertical: \"small\" }}\n    >\n        {children}\n    </Box>\n);\n\nexport default Toolbar;\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Button } from \"grommet\";\nimport { ClearOption } from \"grommet-icons\";\nimport { CytoscapeRenderer as Renderer, Toolbar } from \"../components\";\nimport {\n    currentStateSelector,\n    initialStateSelector,\n    stateMachineActions,\n} from \"../ducks\";\n\nconst Main = styled.main`\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    background-color: #543d96;\n    background-image: linear-gradient(#5f479f 2px, transparent 2px),\n        linear-gradient(90deg, #5f479f 2px, transparent 2px),\n        linear-gradient(#674ea7 1px, transparent 1px),\n        linear-gradient(90deg, #674ea7 1px, transparent 1px);\n    background-size: 100px 100px, 100px 100px, 20px 20px, 20px 20px;\n    background-position: -2px -2px, -2px -2px, -1px -1px, -1px -1px;\n`;\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const currentState = useSelector(currentStateSelector);\n    const initialState = useSelector(initialStateSelector);\n    const handleTransact = useCallback((state) => {\n        dispatch(stateMachineActions.transact(state));\n    }, []);\n    const handleReset = useCallback((state) => {\n        dispatch(stateMachineActions.reset());\n    }, []);\n\n    return (\n        <Main>\n            <Toolbar>\n                <Button icon={<ClearOption />} onClick={handleReset} />\n            </Toolbar>\n            <Renderer\n                currentState={currentState}\n                initialState={initialState}\n                onTransact={handleTransact}\n            />\n        </Main>\n    );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n    Box,\n    Button,\n    Collapsible,\n    Heading,\n    Layer,\n    ResponsiveContext,\n} from \"grommet\";\nimport { FormClose, Notification } from \"grommet-icons\";\nimport Home from \"./Home\";\nimport \"./App.css\";\n\nconst App = ({ children }) => {\n    const [showSidebar, setShowSidebar] = useState(false);\n    return (\n        <Router>\n            <ResponsiveContext.Consumer>\n                {(size) => (\n                    <Box fill>\n                        <Box\n                            tag=\"header\"\n                            direction=\"row\"\n                            align=\"center\"\n                            justify=\"between\"\n                            background=\"light-2\"\n                            pad={{ vertical: \"small\", horizontal: \"medium\" }}\n                            elevation=\"medium\"\n                        >\n                            <Heading level=\"3\" margin=\"none\">\n                                My App\n                            </Heading>\n                            <Button\n                                icon={<Notification />}\n                                onClick={() => setShowSidebar(!showSidebar)}\n                            />\n                        </Box>\n                        <Box\n                            direction=\"row\"\n                            flex\n                            overflow={{ horizontal: \"hidden\" }}\n                        >\n                            <Box flex align=\"center\" justify=\"center\">\n                                <Switch>\n                                    <Route exact path=\"/\">\n                                        <Home />\n                                    </Route>\n                                </Switch>\n                            </Box>\n                            {!showSidebar || size !== \"small\" ? (\n                                <Collapsible\n                                    direction=\"horizontal\"\n                                    open={showSidebar}\n                                >\n                                    <Box\n                                        flex\n                                        width=\"medium\"\n                                        background=\"light-2\"\n                                        elevation=\"small\"\n                                        align=\"center\"\n                                        justify=\"center\"\n                                    >\n                                        sidebar\n                                    </Box>\n                                </Collapsible>\n                            ) : (\n                                <Layer>\n                                    <Box\n                                        background=\"light-2\"\n                                        tag=\"header\"\n                                        justify=\"end\"\n                                        align=\"center\"\n                                        direction=\"row\"\n                                    >\n                                        <Button\n                                            icon={<FormClose />}\n                                            onClick={() =>\n                                                setShowSidebar(false)\n                                            }\n                                        />\n                                    </Box>\n                                    <Box\n                                        fill\n                                        background=\"light-2\"\n                                        align=\"center\"\n                                        justify=\"center\"\n                                    >\n                                        sidebar\n                                    </Box>\n                                </Layer>\n                            )}\n                        </Box>\n                    </Box>\n                )}\n            </ResponsiveContext.Consumer>\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport { LANGUAGES } from \"./settings\";\n\ni18n\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        fallbackLng: \"en-US\",\n        debug: true,\n        ns: [\"translations\"],\n        defaultNS: \"translations\",\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        resources: LANGUAGES.reduce((current, lang) => {\n            return {\n                ...current,\n                [lang]: require(`../i18n/${lang}.js`).default,\n            };\n        }, {}),\n        react: {\n            wait: true,\n        },\n    });\n\nexport default i18n;\n","//#region i18n\nexport const LANGUAGES = [\"en-US\"];\n//#endregion\n\n//#region remote storage\nexport const REMOTE_STORAGE = {\n    DROPBOX_KEY: undefined,\n    GOOGLEDRIVE_KEY: undefined,\n};\n//#endregion\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Grommet } from \"grommet\";\nimport { I18nextProvider } from \"react-i18next\";\nimport store from \"./store\";\nimport theme from \"./theme\";\nimport { App } from \"./views\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport i18n from \"./i18n\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <I18nextProvider i18n={i18n}>\n                <Grommet theme={theme} full>\n                    <App />\n                </Grommet>\n            </I18nextProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}